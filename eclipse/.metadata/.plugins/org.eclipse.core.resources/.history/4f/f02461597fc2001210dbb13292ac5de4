package neuromancer.voice;

import java.io.IOException;

import neuromancer.core.Neuromancer;
import wintermute.data.NodeWiki;
import wintermute.wikipedia.*;

public class VoiceActor {
	
	public static void act(String input) throws Exception
	{
		String[] cutInput = RefinedVoice.cut(input, " ");
		int verbLoc = findFirst(input, "verb");
		String actionGuess = cutInput[verbLoc];
		switch(actionGuess)
		{
		case "search":
			WikiObj searchWiki;
			if(cutInput[verbLoc+1].equals("wikipedia"))
				searchWiki = Neuromancer.wintermute.getWiki("wikipedia");
			else{
				Neuromancer.wintermute.addWikiByName(cutInput[verbLoc+1]);
				searchWiki = Neuromancer.wintermute.getWiki(cutInput[verbLoc+1]);
			}
			NodeWiki tmpWiki = new NodeWiki();
			tmpWiki.sectionContents = new String[searchWiki.theWiki.getSectionMap(cutInput[verbLoc+2]).size()];
			break;
		case "":
			System.err.println("[ACT] No verbs were found! Malformed input?");
			break;
		}
	}
	
	public static void actOnRaw(String rawInput)
	{
		act(RefinedVoice.refineVoice(rawInput));
	}
	
	private static int findFirst(String input, String type)
	{
		String[] words = RefinedVoice.cut(input, " ");
		int toReturn = 0;
		for(String word : words)
		{
			for(String part : Thesaurus.getPartsOfSpeech(word))
			{
				if(part.equals(type))
				{
					return toReturn;
				}
			}
			toReturn++;
		}
		return -1;
	}
}
